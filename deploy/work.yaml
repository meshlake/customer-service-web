apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: customer-service
  name: deployment-customer-service-web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-customer-service-web
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-customer-service-web
    spec:
      containers:
        - image: harbor.dev.meshlake.com:8443/meshlake/customer-service-web:latest
          imagePullPolicy: Always
          name: app-customer-service-web
          ports:
            - containerPort: 80
              protocol: TCP
      imagePullSecrets:
        - name: meshlake-harbor-auth
---
apiVersion: v1
kind: Service
metadata:
  namespace: customer-service
  name: service-customer-service-web
spec:
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
  selector:
    app.kubernetes.io/name: app-customer-service-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: customer-service
  name: ingress-customer-service-web-public
  labels:
    app.kubernetes.io/ingress.class: nginx-public
  annotations:
    kubernetes.io/ingress.class: nginx-public
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 300m
spec:
  rules:
    - host: customer-service.meshlake.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-customer-service-web
              port:
                number: 80
